########################################################## {COPYRIGHT-TOP} ###
# Licensed Materials - Property of IBM
#
# 5725-E59
#
# (C) Copyright IBM Corp. 2013  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication, or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
########################################################## {COPYRIGHT-END} ###
########################################################## {COPYRIGHT-TOP} #####
# Licensed Materials - Property of IBM
#
# 5725-E59
#
# (C) Copyright IBM Corp. 2006, 2011 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication, or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
########################################################## {COPYRIGHT-END} #####
###############################################################################
# Unifi UDS Properties - UNIX                                                 #
# Version 8.0.0                                                               #
# Last Updated Date - Oct 02, 2002                                            #
# This version is used in conjuction with Customer 8.0                        #
# This is used by unifi codetable module                                      #
###############################################################################

UAPPLICATION_REALM=

# Note: The following property was in the u3admin.properties file
LOOKUP_PREFIX=


debug.level=0
debug.flush=1000
perfmon.level=0
perfmon.flush=1000

# Default Locale resource file for Unifi UDS
#
# DWL inc. Console - Licensed Material - Program-Property of DWL inc.
# (C) Copyright DWL inc.1998 - All Rights Reserved.
#

# UNIFI SYSTEM PROPERTIES

UDISPLAYSERVLET_DEPLOYMENTDATE=MM/DD/YYYY:HH:MM:SS
UDISPLAYSERVLET_RELEASEDATE=April 1,2002.
UDISPLAYSERVLET_VERSIONNUMBER=UDisplayServlet V4.5
UAPPLICATION_APPLICATIONNAME=
UDISPLAYSERVLET_CLIENT=DWL|Unifi V4.5 Engine(tm) - DWL Incorporated.
UDISPLAYSERVLET_ANONYMOUS_BINDINGNAME=
UDISPLAYSERVLET_BUILDNUMBER=20020401


#  UNIFI APPLICATION PROPERTIES

#  APPLICATION PATHS
#  RUNTIME PATHS
uds_templatedirectory=<UNIFI_HOME>/wwwroot/Unifi/Console/UDS_Templates/
uapplicationbase=<UNIFI_HOME>/wwwroot/Unifi/Console
uds_cachingdirectory=<UNIFI_HOME>/wwwroot/Cache
uapplicationdesignpage=/uv3design/

#  HELP ENGINE PATHS
runtime_help_template_directory=<UNIFI_HOME>/wwwroot/Unifi/Console/uv3design/unifi_app/help/

#  WORKFLOW ENGINE TEMPATE
runtime_workflow_engine_template=<UNIFI_HOME>/wwwroot/Unifi/Console/uv3design/unifi_app/workflow/status.html


#  COMPILER PATHS
controlPagePath=<UNIFI_HOME>/wwwroot/Unifi/Console/
compilationPath=<UNIFI_HOME>/wwwroot/
sourcePath=/Unifi/Console/uv3design/

#   EJB PROPERTIES
#
#  iiop_contextfactory
#    PURPOSE: Property which informs DWL|Unifi UDisplayServlet what context factory it
#             should use when attempting to connect to the application server.
#
#             NOTE: Different application server(s) use different factories and different
#             protocols. For example, WebSphere Application Server v3.0.2 uses 'IIOP'
#             to communicate between the client and application server. JRun uses
#             the 'JRMI' to do the same communication.
#
#             Iff applicable, you will have additional entries for any additional
#             application servers.
#
#    VALUE:   com.ibm.ejs.ns.jndi.CNInitialContextFactory
iiop_contextfactory=

# ejbprovider
#    PURPOSE: This property informs DWL|Unifi UDisplayServlet where it should find ANY
#             core console and prosec EJBs.
#
###############################################################################
# Commented out with Customer 5.0 for BTM EJBs
###############################################################################
#
#    DEFAULT: blank means local ejb lookup
# ejbprovider=
#
# For remote ejb lookup
# ejbprovider=corbaloc:iiop:host:port
#

#  ejb_contextfactory
#    PURPOSE: This property informs DWL|Unifi UDisplayServlet which context factory
#             to use when doing lookups for console and prosec EJBs.
#
#    DEFAULT: com.ibm.ejs.ns.jndi.CNInitialContextFactory
ejb_contextfactory=com.ibm.websphere.naming.WsnInitialContextFactory

#   APPLICATION SECURITY PROPERTIES
#   AUTHORIZATION OF COMPONENTS
#
#   uds_profileandsecurityhandler
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#             informing DWL|Unifi UDisplayServlet what type of security you wish to use.
#
#    HANDLER(S):
#      * com.dwl.unifi.console.connectors.UProfileAndSecurityHandler
#         - SPI which determines whether the user requesting the applicable component
#           for a window/state has the required role(s) to invoke it.
#
#      * com.dwl.unifi.console.connectors.UProfileAndSecurityAnonymousAccessHandler
#         - SPI which invokes the applicable component(s) for a particular state/window
#           independent of the users and/or component roles. NOTE: This would be used
#           when designing/developing a public site or your not concerned w/ security.
#uds_profileandsecurityhandler=com.dwl.unifi.runtime.authentication.USecurityClient
#uds_profileandsecurityhandler=com.dwl.unifi.console.connectors.UProfileAndSecurityAnonymousAccessHandler

#   AUTHENTICATION OF USER
#
#  uds_portalsecurityhandler
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#             determining whether a particular directory, window, and/or state is secure.
#
#    HANDLER(S):
#
#      * com.dwl.unifi.console.connectors.extension.UPortalSecurityLDAPHandlerEx
#          - Handler which authenticates a user against an LDAP directory tree; includes searching
#
#      * com.dwl.unifi.console.connectors.extension.UPortalSecurityNullHandler
#          - Handler which allows general access independent of whether the applicable
#            properties has been setup correctly.
#
#uds_portalsecurityhandler=com.dwl.unifi.services.security.USecurityProsecModuleDB
#uds_portalsecurityhandler=com.dwl.unifi.console.connectors.extension.UPortalSecurityProsecHandler
#uds_portalsecurityhandler=com.dwl.unifi.console.connectors.UPortalSecurityNullHandler
#uds_portalsecurityhandler=com.dwl.unifi.console.connectors.extension.UPortalSecurityLDAPHandlerEx

#   PROTECTED RESOURCES
UUnifi.SecuredDirectories=,
UUnifi.SecuredStates=,

#   APPLICATION PERSISTENCE
#
#   USER PERSISTENCY LOCATION
#
#  uds_userpersistentstore
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#             storing/retrieving properties associated w/ a user and/or session.
#
#
#    HANDLER(S):
#      * com.dwl.unifi.console.connectors.USessionWideMemoryPersistentStore
#         - Handler which stores/retieves properties associated w/ a user and/session
#           using the available memory on the server.
#
#           NOTE: Since this SPI uses memory as a holder for memory, its scope is limited
#                 to one VM. If your hardware configuration consists of one server,
#                 you should be using the above noted for performance.
#
#
#      * com.dwl.unifi.console.connectors.USessionWideDBPersistentStore
#         - Handler which stores/retrievs properties associated w/ a user and session
#           using a back-end database.
#
#           NOTE: If your hardware configuration contains/consists of multiple servers,
#                 the above noted SPI should be used.
#uds_userpersistentstore=com.dwl.unifi.runtime.persistency.UStandardSessionAPIWrapper
#uds_userpersistentstore=com.dwl.unifi.console.connectors.USessionWideMemoryPersistentStore

#  uds_sessiontimeoutinterval
#    PURPOSE: This property informs DWL|Unifi UDisplayServlet how often; in minutes, it
#             should check the list of sessionid's and whether they should be removed
#             from its list of active sessions.
#
#             NOTE: This value should be set to half of 'uds_sessiontimeout'; described
#                   below.
#uds_sessiontimeoutinterval=7

#   uds_sessiontimeout
#    PURPOSE: This property informs DWL|Unifi UDisplayServlet when it should remove
#             an inactive account; in minutes.
#uds_sessiontimeout=15

#  ttl
#    PURPOSE: This property informs DWL|Unifi UDisplayServlet how it should handle the 'uX'
#             property once the windows for a particular state have been given the chance
#             to use the applicable property.
#
#             Setting this applicable value to '-1' informs that once ALL windows/components
#             for a particular state have been invoked, 'uX' is automatically removed from
#             the user's session information.
#
#             Setting this applicable value to '0' informs that DWL|Unifi UDisplayServlet
#             will keep the 'uX' value even after ALL windows/components for a particular
#             state have been invoked.
#
#             Setting this applicable value to a number greater to '0' will inform
#             DWL|Unifi UDisplayServlet that the 'uX' property is to remain in the user's
#             session store for that specified amount of time; in milliseconds.
#
#    DEFAULT: -1
#ttl=0

#   USER PREFERENCES
#   JAVA VERSION
#uds_profilehandler=com.dwl.unifi.console.connectors.UHttpProfileHandlerEx
#   JAVASCRIPT VERSION
#uds_profilehandler=com.dwl.unifi.console.connectors.UHttpProfileHandler

#   APPLICATION DEBUG PROPERTIES
#uds_exceptionhandler=com.dwl.unifi.services.exceptionhandling.CExceptionHandler
#   LOG TO CONSOLE
#uds_messageloghandler=com.dwl.unifi.services.messagelog.FileMessageLog
#   LOG TO FILE
#uds_messageloghandler=com.dwl.unifi.console.connectors.UMessageLogFileIO
#messagelogfileio_logfile=full path file
#messagelog_mask=511

#  debug_mode
#    PURPOSE: This property informs DWL|Unifi UDisplayServlet whether it is to be run
#             in a development or production environment.
#
#             NOTE: In a production enviroment, there is NO need to constantly to do
#                   a lookup. Nor is it necessary to determine the components for a
#                   particular window/state.
#
#                   Specifically, under a production enviroment; setting this value to
#                   FALSE, EJB home IOR handlers, components for a window/state for
#                   instance are dynamically cached to improve performance.
#
#    DEFAULT: false
debug_mode=false

#  uds_mask
#    PURPOSE: Reserved and should be set to 1.
#uds_mask=1

# APPLICATION COMPONENTS PROPERTIES
#
# uds_componentpropertyhandler
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#             invoking the applicable component in question. DWL|Unifi UDisplayServlet by
#             itself does not know how to retrieve xml; nor should it know.
#
#    HANDLER(S):
#      * com.dwl.unifi.console.connectors.UComponentPropertyDefaultHandler
#         - SPI which knows how to invoke a) JNI components; b) servlet components;
#           c) stateless session bean components; and d) JNDI file based components.
#uds_componentpropertyhandler=com.dwl.unifi.console.connectors.UComponentPropertyDefaultHandler
#uds_componentpropertyhandler=com.dwl.unifi.console.connectors.UComponentPropertyHandler

# uds_componenthandler
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#             determining the type of component - whether it be a servlet, EJB, java class,
#             or a JNDI lookup for example - and determining the class responsible for
#             handling such a request.
#
#    HANDLER(S):
#     * com.dwl.unifi.console.connectors.URegisteredComponentsDefault
#       - Default implementation.
#uds_componenthandler=com.dwl.unifi.console.connectors.URegisteredComponentsDefault

#  uds_querystringhandler
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#             retrieving any URI properties passed as part of the URI.
#
#    HANDLER(S):
#      * com.dwl.unifi.console.connectors.UQueryStringHandler
#         - Default implementation.
#uds_querystringhandler=com.dwl.unifi.console.connectors.UQueryStringHandler

# uds_xmlhandler
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible
#             merging the XML returned from a component and/or components and the
#             associated template file(s).
#
#    HANDLER(S):
#     * com.dwl.unifi.console.connectors.UXmlMergeHandler
#        - Handler which uses the Template API; Guacamole, to merge XML w/ the
#          associated template file.
#
#     * com.dwl.unifi.console.connectors.extension.UXslXmlMergeHandler
#        - Handler which used Apache's XSL parser to merge XSL/XML (experimental).
#
#    DEFAULT: com.dwl.unifi.console.connectors.UXmlMergeHandler
#uds_xmlhandler=com.dwl.unifi.console.connectors.UXmlMergeHandler

#  uds_xmlfinderhandler
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#             retrieving the XML associated w/ a particular component.
#
#             NOTE: This component is used in conjuction w/ "uds_componentpropertyhandler"
#                   property.
#
#    HANDLER(S):
#      * com.dwl.unifi.console.connectors.UXMLFinder
#         - Should be set to this particular handler.
#uds_xmlfinderhandler=com.dwl.unifi.console.connectors.UXMLFinder

#   APPLICATION CACHING PROPERTIES
#
#  uds_cachinghandler
#     PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#              caching and dynamically generating static windows/states at runtime.
#
#     HANDLER(S):
#      * com.dwl.unifi.console.connectors.UCachingCRC32Handler
#         - Handler responsible for caching/dynamically generating static windows/states
#           using CRC32 checksum to determine the name of the generated file.
#         - Default handler.
#
#     NOTE: Refer to dwl_connectors.jar for additional SPI implementations. However, it
#           has been noted that the above implementation is best in terms of performance
#           and filename length(s).
#uds_cachinghandler=com.dwl.unifi.console.connectors.UCachingCRC32Handler

#   uds_cachingenabled
#    PURPOSE: This property informs DWL|Unifi UDisplayServlet whether to enable caching
#             functionality.
#
#    DEFAULT: FALSE
#uds_cachingenabled=false

#uds_ejbdebugmode=true

#   APPLICATION DEVICE PROPERTIES
#
#  uds_devicehandler
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#             determing the requested mime type and what DWL|Unifi UDisplayServlet should
#             return.
#
#    HANDLER(S):
#      * com.dwl.unifi.console.connectors.UDevice
#         - Default implementation.
#uds_devicehandler=com.dwl.unifi.console.connectors.UDevice

#   APPLICATION BACK BUTTON PROPERTIES
#
#   uds_backhandler
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#             handling browser(s) which incorporate the back functionality.
#
#             NOTE: The following SPI implementations are experimental. Forward your
#                   request to the Solutions department for further information.
#
#
#    HANDLER(S):
#      * com.dwl.unifi.console.connectors.UNullBack
#         - Handler which does not include the back functionality.
#
#      * com.dwl.unifi.console.connectors.UHttpBack
#         - Handler which does include the above noted back functionality.
#uds_backhandler=com.dwl.unifi.console.connectors.UNullBack
#uds_backhandler=com.dwl.unifi.console.connectors.UHttpBack

#   APPLICATION RESPONSE PROPERTIES
#
#   uds_responsehandler
#    PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#             adding any additional information when rending the applicable window/state.
#             For example, you may wish to add some client-side javascript information
#             which is ONLY know dynamically since that information is based on the
#             particular window DWL|Unifi UDisplayServlet is rendering.
#
#
#    HANDLER(S):
#      * com.dwl.unifi.console.connectors.extension.UHttpResponseEx
#         = SPI which dynamically adds the role(s) associated w/ the user to the window.
#           NOTE: This SPI returns the users roles in javascript format and thus is ONLY
#           compatible w/ browser(s) which understand javascript 1.1 specification. If
#           you application is javascript based and relies on roles, you should be using
#           this particular SPI implementation.
#
#
#      * com.dwl.unifi.console.connectors.extension.UHttpNullResponse
#         - SPI which no additional information to a dynamically rendered page.
#uds_responsehandler=com.dwl.unifi.console.connectors.UHttpNullResponse
#   JAVASCRIPT VERSION
#uds_responsehandler=com.dwl.unifi.console.connectors.UHttpResponse

#   APPLICATION NAVIGATION PROPERTIES
#
#   uds_navigation
#    PURPOSE: This SPI informs DWL|Unifi Compiler which handler is responsible for
#             handling result id creation for state window(s).
#
#    IMPORTANT:  If you are swhiching handers please run the following SQL statement
#		 before recompiling.
#		 UPDATE ucontentwindow SET result_id = NULL
#
#    HANDLER(S):
#      * com.dwl.unifi.console.connectors.UNavigation
#         - Handler which creates unique result ids.  When compiling states which
# 	    share templates compiler will create unique ids, therefore creating
#	    unique compiled templates for every state.
#
#      * com.dwl.unifi.console.connectors.UNavigationShareResultId
#         - Handler which shares result ids.  When compiling states which share
# 	    templates compiler will share ids.
#	    NOTE: This Handler should be enabled for JSA only.
#
#
#    DEFAULT: com.dwl.unifi.console.connectors.UNavigation
#
#uds_navigation=com.dwl.unifi.console.connectors.UNavigationShareResultId
#uds_navigation=com.dwl.unifi.console.connectors.UNavigation

#   APPLICATION CACHING PROPERTIES PER USER SESSION BASIS
#
#  uds_cachiningresulthandler
#     PURPOSE: This SPI informs DWL|Unifi UDisplayServlet which handler is responsible for
#              caching and dynamically generating states at runtime.
#
#     HANDLER(S):
#      * com.dwl.unifi.console.connectors.UCacheResult
#         - Handler responsible for caching/dynamically generating states
#
#ds_cachiningresulthandler=com.dwl.unifi.console.connectors.UCacheResult
#  Caching time out value in minutes.  Default value is 15 minutes.
#uds_resultcachingtimeout=15
#  Specifies which request type(s) the UDS should cache.  Format is uds_requesttype=type1,type2
uds_requesttype=transaction

#   APPLICATION FORWARD COMPATIBLE EJB PROPERTIES
#
#   unifi_portable_context
#    PURPOSE: This SPI informs DWL|Unifi Compiler which handler is responsible for
#             forward compatibility and ensure that your beans port smoothly to the
#                           EJB 1.0 or 1.1 platform.
#
#    HANDLER(S):
#      * com.dwl.unifi.console.connectors.UPortableContext1_0
#         - Handler for EJB 1.0
#
#      * com.dwl.unifi.console.connectors.UPortableContext1_1
#         - Handler for EJB 1.1
#
#
#    DEFAULT: com.dwl.unifi.console.connectors.UPortableContext1_0
#
#unifi_portable_context=com.dwl.unifi.console.connectors.UPortableContext1_0

#   LDAP PROPERTIES
#LDAP_SEARCH_USERNAME=
#LDAP_SEARCH_PASSWORD=
#LDAP_BASEDN=
#LDAP_CONTEXT_FACTORY=com.sun.jndi.ldap.LdapCtxFactory
#LDAP_PROVIDER_URL=ldap://
#LDAP_USER_CONTEXTNAME=
