########################################################## {COPYRIGHT-TOP} ###
# Licensed Materials - Property of IBM
#
# 5725-E59
#
# (C) Copyright IBM Corp. 2013  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication, or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
########################################################## {COPYRIGHT-END} ###
########################################################## {COPYRIGHT-TOP} #####
# Licensed Materials - Property of IBM
#
# 5725-E59
#
# (C) Copyright IBM Corp. 2008, 2011 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication, or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
########################################################## {COPYRIGHT-END} #####
#This properties file contains configuration of sam(service activity monitor). Any pre-defined element list by sam.reports entry will go to report.
#Below table list the default elements that goes to the report.
################################################################################
#ElementName			Type			Data origin
#transactionName			java.lang.String	DWLTransaction.getTxnType(), Important: For composite transactions, the thransactionName value is constructed as the combination of all the transaction names inside the composite transaction, separated by slashes, prefixed with CompositeTx. For example: CompositeTx/searchParty/addParty/updateParty.
#requestName			java.lang.String	DWLControl.getRequestName()
#requesterName			java.lang.String	DWLControl.getRequesterName()
#requesterLanguage		java.lang.String	DWLControl.getRequesterLanguage()
#requesterLocale			java.lang.String	DWLControl.getRequesterLocale()
#lineOfBusiness 			java.lang.String	DWLControl.getLineOfBusiness()
#company			java.lang.String	DWLControl.getCompany()
#geographicalRegion		java.lang.String	DWLControl.getGeographicalRegion()
#transactionCorrelatorId		java.lang.String	DWLControl.getTransactionCorrelatorId()
#externalCorrelationId		java.lang.String	DWLControl.getExternalCorrelationId()
#clientTransactionName		java.lang.String	DWLControl.getClientTransactionName()
#clientSystemName			java.lang.String	DWLControl.getClientSystemName()
#sessionId			java.lang.String	DWLControl.getSessionId()
#requestOrigin			java.lang.String	DWLControl.getRequestOrigin()
#transactionId			java.lang.String	DWLControl.getTxnId()
#customerDeployedVersion		java.lang.String	DWLControl.getCustomerDeployedVersion()
#customerEnvironment		java.lang.String	DWLControl.getCustomerEnvironment()
#customerRequestVersion		java.lang.String	DWLControl.getCustomerRequestVersion()
#inquireAsOfDate			java.lang.String	DWLControl.getInquireAsOfDate()
#inquireFromDate			java.lang.String	DWLControl.getInquireFromDate()
#inquireToDate			java.lang.String	DWLControl.getInquireToDate()
#requestID			java.lang.Long	DWLControl.getRequestID()
#requestSize			java.lang.Integer	The size of the request message in bytes.
#responseSize			java.lang.Integer	The size of the response message in bytes.
#transactionStatus			java.lang.String	DWLStatus.getStatus()
#startDateTime			java.sql.Timestamp	Timestamp at the begging of the transaction.
#endDateTime			java.sql.Timestamp	Timestamp at the end of the transaction.
#executionTime			java.lang.Long	Duration of transaction in milliseconds.
#osName				java.lang.String	System.getProperty('os.name') + System.getProperty('os.version')
#applicationName			java.lang.String	Application Name as configured in Configuration and Management.
#applicationVersion			java.lang.String	Application Version as configured in Configuration and Management.
#applicationDeploymentName		java.lang.String	Deployment Name as configured in Configuration and Management.
#applicationInstanceName		java.lang.String	Instance Name as configured in Configuration and Management.
#federatedInstanceName		java.lang.String	DWLControl.getfederatedInstanceName
#requestTime			java.lang.String	DWLControl.getRequestTime
#updateMethodCode		java.lang.String	DWLControl.getUpdateMethodCode
#inquiryLanguage			java.util.Vector	DWLControl.getItemsInquiryLanguage
#returnResponse			java.lang.String	DWLControl.getReturnResponse
#pageStartIndex			java.lang.String	DWLControl.getPageStartIndex
#pageEndIndex			java.lang.String	DWLControl.getPageEndIndex
#returnAvailableResultCount		java.lang.String	DWLControl.getReturnAvailableResultCount
#availableResultsCount		java.lang.String	DWLControl.getAvailableResultsCount
################################################################################
sam.reports=transactionName,requestName,requesterName,requesterLanguage,requesterLocale,lineOfBusiness,company,geographicalRegion,transactionCorrelatorId,externalCorrelationId,clientTransactionName,clientSystemName,sessionId,requestOrigin,transactionId,customerDeployedVersion,customerEnvironment,customerRequestVersion,inquireAsOfDate,inquireFromDate,inquireToDate,requestID,requestSize,responseSize,transactionStatus,startDateTime,endDateTime,executionTime,osName,applicationName,applicationVersion,applicationDeploymentName,applicationInstanceName,federatedInstanceName,requestTime,UpdateMethodCode,inquiryLanguage,returnResponse,pageStartIndex,pageEndIndex,returnAvailableResultCount,AvailableResultsCount

#If client want to see additional get inquiry level, database access information, as well as suspect information, please use below alternative configuration.
#sam.reports=transactionName,requestName,requesterName,requesterLanguage,requesterLocale,lineOfBusiness,company,geographicalRegion,transactionCorrelatorId,externalCorrelationId,clientTransactionName,clientSystemName,sessionId,requestOrigin,transactionId,customerDeployedVersion,customerEnvironment,customerRequestVersion,inquireAsOfDate,inquireFromDate,inquireToDate,requestID,requestSize,responseSize,transactionStatus,startDateTime,endDateTime,executionTime,osName,applicationName,applicationVersion,applicationDeploymentName,applicationInstanceName,federatedInstanceName,requestTime,UpdateMethodCode,inquiryLanguage,returnResponse,pageStartIndex,pageEndIndex,returnAvailableResultCount,AvailableResultsCount,sam_TopResEntity,sam_TopResEntityID,sam_GetPersonInqlvl,sam_GetOrgInqlvl,sam_GetContractInqlvl,sam_GetProductInstanceInqlvl,sam_GetProductCategoryInqlvl,sam_GetRelatedProductInqlvl,sam_NumberOfInsert,sam_TotalTimeOfInsert,sam_MostExpensiveInsertTime,sam_MostExpensiveInsertEntity,sam_NumberOfUpdate,sam_TotalTimeOfUpdate,sam_MostExpensiveUpdateTime,sam_MostExpensiveUpdateEntity,sam_NumberOfDelete,sam_TotalTimeOfDelete,sam_MostExpensiveDeleteTime,sam_MostExpensiveDeleteEntity,sam_NumberOfSelect,sam_TotalTimeOfSelect,sam_MostExpensiveSelectTime,sam_MostExpensiveSelectSQL,sam_SuspectProcessingFlag,sam_SuspectPoolSize,sam_NumberOfA1,sam_NumberOfA2,sam_NumberOfB,sam_NumberOfC

#The report is using ',' as delimiter, and it may conflict with sql statement, which may also contains ','. To resolve this issue, we define configurable sql wrapper tag with below entry 
#For example, with below sql statement that might be in the report, if the wrapper is '||'
# SELECT PPREF_TP_CD, PPREF_ACTION_TP_CD FROM PPREFACTIONOPT
#together with other elements, for example, the whole message might be looks like
#addPerson,||SELECT PPREF_TP_CD, PPREF_ACTION_TP_CD FROM PPREFACTIONOPT ||,true,,,,
#the analysis tool can then know that everything in between the wrapper tag is the sql statement.
sam.reports.sql.wrapper=||
