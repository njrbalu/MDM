########################################################## {COPYRIGHT-TOP} ###
# Licensed Materials - Property of IBM
#
# 5725-E59
#
# (C) Copyright IBM Corp. 2013  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication, or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
########################################################## {COPYRIGHT-END} ###
########################################################## {COPYRIGHT-TOP} #####
# Licensed Materials - Property of IBM
#
# 5725-E59
#
# (C) Copyright IBM Corp. 2006, 2011 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication, or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
########################################################## {COPYRIGHT-END} #####
###############################################################################
# Version 8.0.0                                                               #
# This version is used in conjunction with Customer 8.0                        #
###############################################################################



#------------------------------------------------------------------------------
# HOW TO USE THIS PROPERTIES FILE
#------------------------------------------------------------------------------
#NOTE:  Use this properties file ONLY if you intend to output to logs other than WAS's own SYSTEM OUT log.
#
# 1. First you specify a logger and the Handlers it uses by defining a unique string ending in ".handlers".
#    For example: x.y.z.handlers=<handler class name> specifies a logger named "x.y.z" having a handler
#    with a class name <handler class name>.  You can have as many handlers for a logger as you like by including one or
#    more handler class names separated by commas or spaces.
# 2. Having specified the logger and its handlers, you must now configure each handler.  You can configure
#    the logger to use the handlers of its parent loggers, up to and including the root logger in addition to
#    whatever additional handlers you've configured for it.  Do this by specifying x.y.z.useParentHandlers=true.  The default is false.
#    Each Handler must be a unique class in this properties file.  You can't reuse the same handler for more than one logger.
#    Each handler must must be a unique class and it must subclass java.util.logging.FileHandler.  That's because the format 
#    for the JDK Logging properties handlers is based on handler class names and it has no way to distinguish between two handlers of the same class name.  
# 3. Each handler has 6 settings you must configure.  These settings are fully described in the Java Utility Logging API documentation.
#    We briefly introduce them here:
#    3.1  <handler class name>.formatter=<formatter class name> allows you to specify a special formatter for your custom file handler.
#			The default formatter, if you don't specify one is the java.util.logging.SimpleFormatter.
#    3.2  <handler class name>.encoding=UTF-8.  Specify any other encoding you like here.
#           The default encoding is UTF-8.
#    3.3  <handler class name>.limit=<some big number>  That's the maximum size in bytes of the log file before it rolls over to another 
#          log or restarts the log file.  The default is 10000000 (10 Megabytes)
#    3.4  <handler class name>.count=<some small number>  That's the number of rolled over log files you want to keep.
#          The default is 10.  If you set the count to 1, it won't roll over the log files. It will wipe the log file clean and start writing again.
#          Which is probably not what you want.
#    3.5  <handler class name>.pattern=<the file name pattern for the log file you want to create>.  For more details see:  
#					http://docs.oracle.com/javase/6/docs/api/java/util/logging/FileHandler.html
#                   There is no default.  You must Specify a file name.
#    3.6  <handler class name>.append=true this specifies whether the file handler is to append to an existing file matching the pattern
#                   or whether it is to create a new one.
#
# If you change this configuration, you must restart the JVM (i.e the application server)
# Also see:   http://java.sun.com/j2se/1.4.2/docs/api/java/util/logging/package-summary.html

#--------------------------------------------------------------------------
# Performance Monitor Logging Configurations
#
com.dwl.base.performance.internal.PerformanceMonitorLog.handlers=com.dwl.base.logging.handlers.PerfMonitorFileHandler
com.dwl.base.performance.internal.PerformanceMonitorLog.useParentHandlers=false
com.dwl.base.logging.handlers.PerfMonitorFileHandler.formatter=com.dwl.base.logging.formatters.PerformanceLogFormatter
com.dwl.base.logging.handlers.PerfMonitorFileHandler.encoding=UTF-8
com.dwl.base.logging.handlers.PerfMonitorFileHandler.limit=10000000
com.dwl.base.logging.handlers.PerfMonitorFileHandler.count=2
com.dwl.base.logging.handlers.PerfMonitorFileHandler.pattern=./logs/server1/performancemonitor.n%g.log
com.dwl.base.logging.handlers.PerfMonitorFileHandler.append=true

##--------------------------------------------------------------------------
## Request Response Logging Configurations
##
com.dwl.base.logging.ReqRespLogger.handlers=com.dwl.base.logging.handlers.ReqRespFileHandler
com.dwl.base.logging.ReqRespLogger.useParentHandlers=false
com.dwl.base.logging.handlers.ReqRespFileHandler.formatter=com.dwl.base.logging.formatters.SimpleFormatter
com.dwl.base.logging.handlers.ReqRespFileHandler.encoding=UTF-8
com.dwl.base.logging.handlers.ReqRespFileHandler.limit=10000000
com.dwl.base.logging.handlers.ReqRespFileHandler.count=10
com.dwl.base.logging.handlers.ReqRespFileHandler.pattern=./logs/server1/RequestResponseMessage.n%g.log
com.dwl.base.logging.handlers.ReqRespFileHandler.append=true

##--------------------------------------------------------------------------
## TransactionDataListener logger Logging Configurations
##
com.dwl.base.report.mbean.TransactionDataListener.handlers=com.dwl.base.logging.handlers.TransactionDataListenerFileHandler
com.dwl.base.report.mbean.TransactionDataListener.useParentHandlers=false
com.dwl.base.logging.handlers.TransactionDataListenerFileHandler.formatter=com.dwl.base.logging.formatters.SimpleFormatter
com.dwl.base.logging.handlers.TransactionDataListenerFileHandler.encoding=UTF-8
com.dwl.base.logging.handlers.TransactionDataListenerFileHandler.limit=10000000
com.dwl.base.logging.handlers.TransactionDataListenerFileHandler.count=10
com.dwl.base.logging.handlers.TransactionDataListenerFileHandler.pattern=./logs/server1/transactiondata.n%g.log
com.dwl.base.logging.handlers.TransactionDataListenerFileHandler.append=true


