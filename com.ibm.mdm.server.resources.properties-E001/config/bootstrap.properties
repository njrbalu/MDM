########################################################## {COPYRIGHT-TOP} ###
# Licensed Materials - Property of IBM
#
# 5725-E59
#
# (C) Copyright IBM Corp. 2013  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication, or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
########################################################## {COPYRIGHT-END} ###
########################################################## {COPYRIGHT-TOP} #####
# Licensed Materials - Property of IBM
#
# 5725-E59
#
# (C) Copyright IBM Corp. 2005, 2011 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication, or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
########################################################## {COPYRIGHT-END} #####


#================================================================================
# Application Configuration Client (ACC) Bootstrap Configuration
#================================================================================

#--------------------------------------------------------------------------------
# Application Java Edition
#--------------------------------------------------------------------------------
# Application can be either a standard or enterprise Java application. Possible
# values are "j2se" and "j2ee" respectively. If not set it defaults to "j2ee".

application.java.edition=j2ee


#--------------------------------------------------------------------------------
# JMX Remote Connector Server
#--------------------------------------------------------------------------------
#
# Service URLs of the JMX remote connector server at which the Application
# Configuration Client will accept incoming connections from remote agents.
# The content of the URL determines the type and configuration of the connector
# server.
# Only standard edition applications (J2SE) require the use of a
# JMX Remote Connector Server. Enterprise edition applications (J2EE) are made
# available for management through the Management EJB (MEJB). Therefore this
# setting can be omitted for J2EE applications.
#
# Examples:
#	service:jmx:rmi://localhost/jndi/rmi://localhost:9999
#	service:jmx:soap://host:8080
#	service:jmx:soap+ssl://host:8443

remote.connector.url=service:jmx:rmi://localhost/jndi/rmi://localhost:9999



#================================================================================
# Configuration Repository Bootstrap Configuration
#================================================================================

#--------------------------------------------------------------------------------
# Configuration Repository URI
#--------------------------------------------------------------------------------
#
# URI of the Configuration Repository. The generic form of the URI is as follows:
# 	config:<adapter-scheme>:<adapter-specific-part>
# Only a relational database configuration repository adapter is currently
# provided. The scheme name of this adapter is "database". There are three forms
# of URIs supported for this scheme. One takes a jdbc database specific URI,
# another one takes a JNDI name and the third one takes a J2EE container resource
# reference name.
#	config:database:jdbc:db2:<db-alias>;user=<user-name>;password=<password>
#	config:database:jdbc:db2://<host>:<port>/<database-name>:user=<user-name>;password=<password>
#	config:database:jdbc:oracle:driverType:@<host>:<port>:<database-name>;user=<user-name>;password=<password>
#	config:database:<jndi-name>
#	config:database:java:comp/env/<res-ref-name>
#
# Examples:
#	repository.uri=config:database:jdbc:db2:CUSTOMER;user=db2admin;password=db2admin
#	repository.uri=config:database:jdbc:db2://localhost/CUSTOMER:user=db2admin;password=db2admin
#	repository.uri=config:database:jdbc:oracle:thin:@localhost:1521:customer;user=scott;password=tiger
#	repository.uri=config:database:jdbc/DWLConfig
#	repository.uri=config:database:java:comp/env/jdbc/DWLConfig
#
# When using an URI that contains a JNDI name, the following JVM properties must
# be set at the command line to enable the connectivity to the naming service:
#   java.naming.factory.initial=<initial-context-factory-class>
#   java.naming.provider.url=<naming-service-url>
#
# Examples:
#   -Djava.naming.factory.initial=com.ibm.websphere.naming.WsnInitialContextFactory
#   -Djava.naming.provider.url=iiop://localhost:2809/

repository.uri=config:database:jdbc/DWLConfig

# Driver class name of db2
repository.jdbc.driver.db2=com.ibm.db2.jcc.DB2Driver
# Driver class name of oracle. 
repository.jdbc.driver.oracle=oracle.jdbc.driver.OracleDriver


#--------------------------------------------------------------------------------
# Configuration Repository Factory Class
#--------------------------------------------------------------------------------
#
# Configures the repository adapter class to use as a repository factory. Each
# repository adapter must have an entry of the form:
# 	repository.factory.<adapter-scheme>
# The only repository currently provided is relational database adapter, whose
# scheme name is "database".
#
# Examples:
# 	repository.factory.database=com.dwl.management.config.repository.database.RepositoryFactoryImpl

repository.factory.database=com.dwl.management.config.repository.database.RepositoryFactoryImpl


#--------------------------------------------------------------------------------
# Configuration Client Platform Dependent Behavior
#--------------------------------------------------------------------------------
#
# This setting selects the class that handles the application server specific behavior. Use one
# of the classes below, according to your target application server.
# If running within a J2SE application, no class is required and this setting will be ignored.
#
# IBM WebSphere Application Server : com.dwl.management.platform.was.WebSphereSpecificBehavior
# BEA WebLogic Application Server  : com.dwl.management.platform.wl.WebLogicSpecificBehavior

platform.specific.behavior=com.dwl.management.platform.was.WebSphereSpecificBehavior


#================================================================================
# General Purpose Bootstrap Configuration
#================================================================================
# The following JDK logging settings are deprecated since v8.0
#--------------------------------------------------------------------------------
# JDK Logging Settings
#--------------------------------------------------------------------------------
# For more details see
# http://java.sun.com/j2se/1.4.2/docs/api/java/util/logging/package-summary.html
#
# By default logging configuration is commented out, assuming that the
# host application will provide the appropriate logging configuration.
# If the host application does not use JDK logging, then un-comment the
# appropriate logging configuration to enable logging for
# management and configuration components.

#handlers=java.util.logging.ConsoleHandler
#java.util.logging.ConsoleHandler.level=INFO
#java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

#handlers=java.util.logging.FileHandler
#java.util.logging.FileHandler.level=FINE
#java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
#java.util.logging.FileHandler.formatter=java.util.logging.XMLFormatter
#java.util.logging.FileHandler.pattern=<LOG_FILE>/DWLCommon.log
#java.util.logging.FileHandler.append=true

# The next line controls the level of output for the root logger
# [ALL, FINEST, FINER, FINE, CONFIG, INFO, WARNING, SEVERE, OFF]
#.level=CONFIG

# Un-comment the line below to enable logging for DWL components.
# To limit the output make the package name more specific.
# Add more entries like the one below to enable logging for multiple packages.

#com.dwl.level=FINE



#---------------------------------------------------------------------------------
# JMX Listeners Class Name
#---------------------------------------------------------------------------------
# This setting specify class names of multiple JMX Listeners which can handle notification
# sent from ConfigurationClientMBean.
# Each property must have one entry named JMXListeners.className.n where n is an ordinal number.

JMXListeners.className.1= com.dwl.management.config.client.mbean.listeners.LoggingChangeListenerMBean
